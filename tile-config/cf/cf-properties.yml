product-name: cf
product-properties:
  .cloud_controller.apps_domain:
    value: ((apps-domain))
  .cloud_controller.system_domain:
    value: ((sys-domain))
  .ha_proxy.skip_cert_verify:
    value: true
  .mysql_monitor.recipient_email:
    value: ((mysql-email))
  .properties.cf_networking_enable_space_developer_self_service:
    value: true
  .properties.cf_networking_internal_domain:
    value: apps.internal
  .properties.cloud_controller_default_stack:
    selected_option: default
    value: default
  .properties.credhub_key_encryption_passwords:
    value:
    - name: key1
      primary: true
      provider: internal
      secret: ((credhubkey))
  .properties.networking_poe_ssl_certs:
    value:
    - name: wildcard
      certificate:
        cert_pem: ((wildcard-cert))
        private_key_pem: ((wildcard-key))
  .properties.route_services:
    selected_option: disable
    value: disable
  .properties.routing_tls_termination:
    selected_option: router
    value: router
  .properties.security_acknowledgement:
    value: x
  .router.frontend_idle_timeout:
    value: ((router-idle-timeout))
  .router.lb_healthy_threshold:
    value: 20
  .router.request_timeout_in_seconds:
    value: ((router-request-timeout))
network-properties:
  network:
    name: ((network-name))
  other_availability_zones:
  - name: "null"
  singleton_availability_zone:
    name: "null"
resource-config:
  backup_restore:
    instances: 0
    persistent_disk:
      size_mb: "51200"
  clock_global:
    instances: ((instances.clock_global))
  cloud_controller:
    instances: ((instances.cc))
  cloud_controller_worker:
    instances: ((instances.cc_worker))
  consul_server:
    instances: automatic
  credhub:
    instances: 1
  diego_brain:
    instances: ((instances.diego_brain))
  diego_cell:
    instances: ((instances.diego_cell))
  diego_database:
    instances: ((instances.diego_database))
  doppler:
    instances: ((instances.doppler))
  ha_proxy:
    instances: ((instances.ha_proxy))
  loggregator_trafficcontroller:
    instances: ((instances.loggregrator))
  mysql:
    instances: ((instances.mysql))
    persistent_disk:
      size_mb: "20480"
  mysql_monitor:
    instances: automatic
  mysql_proxy:
    instances: ((instances.mysql_proxy))
  nats:
    instances: ((instances.nats))
  nfs_server:
    instances: ((instances.nfs_server))
    persistent_disk:
      size_mb: "20480"
  router:
    instances: ((instances.router))
    elb_names:
    - pas-elb-web-ip
  syslog_adapter:
    instances: ((instances.syslog_adapter))
  syslog_scheduler:
    instances: ((instances.syslg_scheduler))
  tcp_router:
    instances: ((instances.tcp_router))
  uaa:
    instances: ((instances.uaa))
errand-config:
  deploy-autoscaler:
    post-deploy-state: false
  deploy-notifications:
    post-deploy-state: false
  deploy-notifications-ui:
    post-deploy-state: false
  nfsbrokerpush:
    post-deploy-state: false
  push-apps-manager:
    post-deploy-state: true
  push-usage-service:
    post-deploy-state: false
  smoke_tests:
    post-deploy-state: true
  test-autoscaling:
    post-deploy-state: false
