---
resource_types:
- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final


resources:
- name: src
  type: git
  source:
    uri: https://github.com/vponnam/platform-automations.git
    branch: dev

# resource for pas tile download from pivnet
- name: pas
  type: pivnet
  source:
    api_token: ((api-token))
    product_slug: elastic-runtime
    product_version: ((pas-version))

jobs:
- name: Create-OM
  plan:
  - get: src
  - task: create-iaas-and-om
    params:
      USER: ((user))
      LOCATION: ((location))
      OPS_MAN_IMAGE_URL: ((om-url))
      OM_VERSION: ((om-version))
      NSG_NAME: ((nsg))
      NETWORK: ((network))
      SUBNET: ((subnet))
      OM_IP: ((om-ip))
      OM_DISK: ((om-disk))
      OM_NIC: ((om-nic))
      PAS_PUB_IP: ((pas-ip))
      SSH_KEY_PATH: ((om-ssh-public))
      app_id: ((azure-client-id))
      client_secret: ((azure-client-secret))
      tenant: ((azure-tenant-id))
      VAULT_TOKEN: ((vault-token))
      VAULT_ADDR: ((vault-addr))
      VAULT_SKIP_VERIFY: ((vault-ssl))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: vponnam/pipelines}
      inputs:
      - name: src
      run:
        path: src/az/iaas-provision/create-iaas.sh

  # set-up required vault creds for director config
  - task: write-vault-secrets
    attempts: 3
    params:
      NETWORK: ((network))
      SUBNET: ((subnet))
      VAULT_TOKEN: ((vault-token))
      VAULT_ADDR: ((vault-addr))
      VAULT_SKIP_VERIFY: ((vault-ssl))
      USER: ((user))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: vponnam/pipelines}
      inputs:
      - name: src
      run:
        path: src/az/iaas-provision/write-vault-secrets.sh

  # tasks to configure OpsMan bosh director
  - task: configure-director-auth
    attempts: 3
    params:
      OM_ENV: ((environment))
      OM_AUTH: ((director-auth))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: vponnam/pipelines}
      inputs:
      - name: src
      outputs:
      - name: om-configs
      run:
        path: bash
        args:
        - "-c"
        - |
          bosh int <(echo "${OM_ENV}") > om-configs/env.yml
          bosh int <(echo "${OM_AUTH}") > om-configs/auth.yml
          om --env om-configs/env.yml configure-authentication --config om-configs/auth.yml
  - task: configure-director-properties
    params:
      Director_Prop: ((director-properties))
      USER: ((user))
      VAULT_TOKEN: ((vault-token))
      VAULT_ADDR: ((vault-addr))
      VAULT_SKIP_VERIFY: ((vault-ssl))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: vponnam/pipelines}
      inputs:
      - name: src
      - name: om-configs
      run:
        path: src/az/director/configure.sh

- name: Delete-OM
  plan:
  - get: src
  - task: Delete-PCF-installation
    params:
      OM_ENV: ((environment))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: vponnam/pipelines}
      run:
        path: bash
        args:
        - "-c"
        - |
          bosh int <(echo "${OM_ENV}") > env.yml
          om --env env.yml delete-installation
  - task: Delete-OM
    attempts: 3
    params:
      USER: ((user))
      LOCATION: ((location))
      OPS_MAN_IMAGE_URL: ((om-url))
      OM_VERSION: ((om-version))
      NSG_NAME: ((nsg))
      NETWORK: ((network))
      SUBNET: ((subnet))
      OM_IP: ((om-ip))
      OM_DISK: ((om-disk))
      OM_NIC: ((om-nic))
      PAS_PUB_IP: ((pas-ip))
      app_id: ((azure-client-id))
      client_secret: ((azure-client-secret))
      tenant: ((azure-tenant-id))
      VAULT_TOKEN: ((vault-token))
      VAULT_ADDR: ((vault-addr))
      VAULT_SKIP_VERIFY: ((vault-ssl))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: vponnam/pipelines}
      inputs:
      - name: src
      run:
        path: src/az/iaas-provision/delete-iaas.sh

# Job to configure OpsMan
- name: explicit-configure-opsman
  plan:
  - get: src
  - task: configure-director-auth
    params:
      OM_ENV: ((environment))
      OM_AUTH: ((director-auth))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: vponnam/pipelines}
      inputs:
      - name: src
      outputs:
      - name: om-configs
      run:
        path: bash
        args:
        - "-c"
        - |
          bosh int <(echo "${OM_ENV}") > om-configs/env.yml
          bosh int <(echo "${OM_AUTH}") > om-configs/auth.yml
  - task: configure-director-properties
    params:
      Director_Prop: ((director-properties))
      USER: ((user))
      VAULT_TOKEN: ((vault-token))
      VAULT_ADDR: ((vault-addr))
      VAULT_SKIP_VERIFY: ((vault-ssl))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: vponnam/pipelines}
      inputs:
      - name: src
      - name: om-configs
      run:
        path: src/az/director/configure.sh

# PAS tile uplaod and config
- name: PAS-tile-Upload
  plan:
  - get: src
  - get: pas
    params:
      globs: ["cf-*.pivotal"]
  - task: upload-pas
    params:
      api_token: ((api-token))
      OM_ENV: ((environment))
      OM_AUTH: ((director-auth))
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: vponnam/pipelines}
      inputs:
      - name: src
      - name: pas
      run:
        path: src/tile-config/upload-tile.sh

- name: PAS-tile-Configure
  plan:
  - get: src
  - task: configure-pas
    params:
      OM_ENV: ((environment))
      OM_AUTH: ((director-auth))
      cf-vars: ((cf-vars))

    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: vponnam/pipelines}
      inputs:
      - src
      run:
        path: src/tile-config/cf/configure-pas.sh
